import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"RelatedItemsPro Element","titleTemplate":":title | Essentials ZOO Documentation | ZOOlanders","description":"","frontmatter":{},"headers":[],"relativePath":"essentials-for-zoo/addons/elements/related-items-pro.md","filePath":"essentials-for-zoo/addons/elements/related-items-pro.md"}');
const _sfc_main = { name: "essentials-for-zoo/addons/elements/related-items-pro.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="relateditemspro-element" tabindex="-1">RelatedItemsPro Element <a class="header-anchor" href="#relateditemspro-element" aria-label="Permalink to &quot;RelatedItemsPro Element&quot;">​</a></h1><p>The <strong>RelatedItemsPro Element</strong> extends with new features the ZOO RelatedItems element. Once the element is set in the Type there are several configuration params that differ from the ZOO ones.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Editable</em></td><td>Determines if the element should allow make relations or only show them. Usually combined with Bi-relation feature.</td></tr><tr><td><em>Authored by User</em></td><td>Limit the relations list to items authored by current User.</td></tr><tr><td><em>Hide Unpublished</em></td><td>Limit the relations list to published items.</td></tr><tr><td>Items</td><td></td></tr><tr><td><em>Apps</em></td><td>Limit the relations list to items belonging to selected Apps.</td></tr><tr><td><em>Types</em></td><td>Limit the relations list to items being of selected Type.</td></tr><tr><td><em>Bi-Related Elements</em></td><td>Choose the elements from other Types that will be used for the bi-directional relation.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Bi-relation is a powerful feature, for example an <em>Event</em> and <em>Venue</em> items could be related to each other by saving only one of them, the other will be related to the first one automatically.</p></div><h2 id="default-layout" tabindex="-1">Default Layout <a class="header-anchor" href="#default-layout" aria-label="Permalink to &quot;Default Layout&quot;">​</a></h2><p>Renders the related items with the following settings.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Related Layout</em></td><td>Allows choosing the layout that will be used for rendering the Items.</td></tr><tr><td><em>Link to Item</em></td><td>When <strong>Related Layout</strong> is set to <strong>Item Name</strong> allows linking the name to the Item full view.</td></tr><tr><td><em>Subrelated Element</em></td><td>It allows rendering the relations from the related Items. For example if a Car item is related to Concessionary Item it would allow rendering all the Cars from that Concessionary.</td></tr><tr><td><em>Exclude it Self</em></td><td>When rendering subrelations allows excluding the current Item.</td></tr><tr><td><em>Order</em></td><td>allows choosing the rendered Items order.</td></tr></tbody></table><h2 id="widgetkit-layout" tabindex="-1">Widgetkit Layout <a class="header-anchor" href="#widgetkit-layout" aria-label="Permalink to &quot;Widgetkit Layout&quot;">​</a></h2><p>Widgetkit layout is an integration layer between the element and <a href="http://yootheme.com/widgetkit" target="_blank" rel="noreferrer">Widgetkit</a> allowing to render a Widget using the element data as content. Therefore it is possible to render the related items data set in a Widgetkit widget. For details about configuration options visit the <a href="https://yootheme.com/support/widgetkit/" target="_blank" rel="noreferrer">Widgetkit documentation</a>.</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("essentials-for-zoo/addons/elements/related-items-pro.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const relatedItemsPro = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  relatedItemsPro as default
};
