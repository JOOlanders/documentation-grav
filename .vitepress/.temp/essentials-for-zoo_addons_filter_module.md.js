import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Module","titleTemplate":":title | Essentials ZOO Documentation | ZOOlanders","description":"","frontmatter":{},"headers":[],"relativePath":"essentials-for-zoo/addons/filter/module.md","filePath":"essentials-for-zoo/addons/filter/module.md"}');
const _sfc_main = { name: "essentials-for-zoo/addons/filter/module.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="module" tabindex="-1">Module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;Module&quot;">â€‹</a></h1><p>The ZOOfilter Module renders the filter form with the following settings:</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Items</em></td><td>The ZOO App and Type which Items will be filtered.</td></tr><tr><td><em>Form Method</em></td><td>The method that will be used by the Form to send the search data, <strong>GET</strong> or <strong>POST</strong>.</td></tr><tr><td><em>Show Ordering</em></td><td>If enabled the Ordering Form will be displayed in the results page allowing to reorder the filtered results.</td></tr><tr><td><em>Show Search Page Title</em></td><td>If enabled the <strong>Search Page Title</strong> field value will be displayed in the results page.</td></tr><tr><td><em>Search Page Title</em></td><td>The search page title value.</td></tr><tr><td><em>Show Submit Button</em></td><td>If enabled the <strong>Submit</strong> button will be displayed in the search form.</td></tr><tr><td><em>Show Clear Button</em></td><td>If enabled the <strong>Clean</strong> button will be displayed in the search form allowing to clear the contents of any entered filtering criteria.</td></tr><tr><td><em>Show Permalink</em></td><td>If enabled <strong>Get Permalink</strong> option will be displayed allowing to copy the URL of the result page.</td></tr><tr><td><em>Result Columns</em></td><td>The amount of columns with which the Items will be rendered in the results view.</td></tr><tr><td><em>Form Columns</em></td><td>The amount of columns with which the search elements will be rendered on the search form (only for module UIkit layout).</td></tr><tr><td><em>Items per Page</em></td><td>The amount of Items per page that will be displayed in the results view.</td></tr><tr><td><em>Max Number of Results</em></td><td>By default 1000, it will limit the amount of entries in the filter results. Any items matching the filter criteria that are beyond the limit will not be rendered.</td></tr><tr><td><em>Search form style</em></td><td>The Layout that will be used for displaying the search form wrapper. <strong>Default</strong> layout will display the form using the standard styles while <strong>UIkit</strong> will display it using UIkit style.</td></tr><tr><td><em>Page Layout</em></td><td>The Layout that will be used for displaying the results. <strong>Search</strong> page will display the results using standard results display while <strong>Json</strong>, exclusively for custom layouts, will return the result in JSON format. <strong>UIkit</strong> layout is like Search layout but with UIkit styling.</td></tr><tr><td><em>Ordering Layout</em></td><td>The layout that will be used to render the order form.</td></tr><tr><td><em>Result Layout</em></td><td>The layout that will be used to render the results view.</td></tr><tr><td><em>Module Layout</em></td><td>The layout that will be used to render the form.</td></tr><tr><td><em>Result Page Itemid</em></td><td>Allows associating the Results page with a Menu Item by appending the specified Itemid to the results page URL.</td></tr><tr><td><em>Module Class Suffix</em></td><td>The module class suffix, used for styling.</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Take into consideration that Form POST method does not support pagination between results.</p></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("essentials-for-zoo/addons/filter/module.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const module = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  module as default
};
