import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"GoogleMapsPro Element","titleTemplate":":title | Essentials ZOO Documentation | ZOOlanders","description":"","frontmatter":{},"headers":[],"relativePath":"essentials-for-zoo/addons/elements/google-maps-pro.md","filePath":"essentials-for-zoo/addons/elements/google-maps-pro.md"}');
const _sfc_main = { name: "essentials-for-zoo/addons/elements/google-maps-pro.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="googlemapspro-element" tabindex="-1">GoogleMapsPro Element <a class="header-anchor" href="#googlemapspro-element" aria-label="Permalink to &quot;GoogleMapsPro Element&quot;">​</a></h1><p>The <strong>GoogleMapsPro Element</strong> extends with new features the ZOO GoogleMaps element. Once the element is set in the Type there are several configuration params that differ from the ZOO ones.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>API Key</em></td><td>The Google API key, necessary for high traffic sites.</td></tr><tr><td><em>Type</em></td><td>The initial Map Type.</td></tr><tr><td><em>Zoom level</em></td><td>The initial Map Zoom level.</td></tr><tr><td><em>Width</em></td><td>The initial Map width.</td></tr><tr><td><em>Height</em></td><td>The initial Map height.</td></tr><tr><td><em>Default center</em></td><td>The initial Map center location.</td></tr></tbody></table><blockquote><p>These settings affects the backend map displayed for selecting the location.</p></blockquote><h2 id="default-layout" tabindex="-1">Default Layout <a class="header-anchor" href="#default-layout" aria-label="Permalink to &quot;Default Layout&quot;">​</a></h2><p>Renders a Google Maps map with the single Item location centered in the map as a marker. It supports the following configurations:</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Marker</em></td><td></td></tr><tr><td>-- <em>Icon</em></td><td>The marker icon.</td></tr><tr><td>-- <em>Layout</em></td><td>The Item layout that will be used to render the Marker content.</td></tr><tr><td>-- <em>Popup on load</em></td><td>If enabled the Marker will popup on load.</td></tr><tr><td><em>Map</em></td><td></td></tr><tr><td>-- <em>Type</em></td><td>The default map type.</td></tr><tr><td>-- <em>Type Controls</em></td><td>If enabled the map would display an control to change the map type.</td></tr><tr><td>-- <em>Map Controls</em></td><td>Allows choosing if the map controls should be displayed and if so its size.</td></tr><tr><td>-- <em>Zoom Level</em></td><td>The map zoom level, from 1 to 20.</td></tr><tr><td>-- <em>Scroll Wheel Zoom</em></td><td>Toggles the map scroll wheel zooming.</td></tr><tr><td><em>Directions</em></td><td></td></tr><tr><td>-- <em>Directions</em></td><td>Toggle the directions map option.</td></tr><tr><td>-- <em>Language</em></td><td>The directions language. Leave empty to use users preferred site language.</td></tr><tr><td>-- <em>Information</em></td><td>Allows displaying the entered content above the map.</td></tr><tr><td><em>Dimensions</em></td><td></td></tr><tr><td>-- <em>Width Unit</em></td><td>The map width unit, pixel or percentage.</td></tr><tr><td>-- <em>Map Width</em></td><td>The map width value.</td></tr><tr><td>-- <em>Map Height</em></td><td>Set the map height value in pixels.</td></tr></tbody></table><h2 id="address-layout" tabindex="-1">Address Layout <a class="header-anchor" href="#address-layout" aria-label="Permalink to &quot;Address Layout&quot;">​</a></h2><p>Renders the Address information set in the Item.</p><h2 id="widgetkit-layout" tabindex="-1">Widgetkit Layout <a class="header-anchor" href="#widgetkit-layout" aria-label="Permalink to &quot;Widgetkit Layout&quot;">​</a></h2><p>Widgetkit layout is a integration layer between the element and <a href="http://yootheme.com/widgetkit" target="_blank" rel="noreferrer">Widgetkit</a> allowing to render a Widget using the element data as content. For details about configuration options visit the <a href="https://yootheme.com/support/widgetkit/" target="_blank" rel="noreferrer">Widgetkit documentation</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>GoogleMapsPro Widgetkit integration was tested with Map Widget, even though any Widget can be used the location data would not make much sense anywhere else.</p></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("essentials-for-zoo/addons/elements/google-maps-pro.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const googleMapsPro = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  googleMapsPro as default
};
