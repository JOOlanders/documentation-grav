import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"MediaPro Element","titleTemplate":":title | Essentials ZOO Documentation | ZOOlanders","description":"","frontmatter":{},"headers":[],"relativePath":"essentials-for-zoo/addons/elements/media-pro.md","filePath":"essentials-for-zoo/addons/elements/media-pro.md"}');
const _sfc_main = { name: "essentials-for-zoo/addons/elements/media-pro.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="mediapro-element" tabindex="-1">MediaPro Element <a class="header-anchor" href="#mediapro-element" aria-label="Permalink to &quot;MediaPro Element&quot;">​</a></h1><p>The <strong>MediaPro Element</strong> extends with new features the ZOO Media element. Once the element is set in the Type there are several configuration params that differ from the ZOO ones.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Player</em></td><td>Select the Player which will be used for rendering the media. Currently supported <a href="http://www.jplayer.org/" target="_blank" rel="noreferrer">jPlayer</a>, <a href="http://www.jwplayer.com/" target="_blank" rel="noreferrer">JWPlayer</a> and <a href="http://www.mediaelementjs.com/" target="_blank" rel="noreferrer">MediaElement</a>.</td></tr></tbody></table><h2 id="jplayer-layout" tabindex="-1">JPlayer Layout <a class="header-anchor" href="#jplayer-layout" aria-label="Permalink to &quot;JPlayer Layout&quot;">​</a></h2><p>Renders the video using the JPlayer player.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Width</em></td><td>Set the Video width size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Height</em></td><td>Set the Video height size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Autoplay</em></td><td>If enabled the track will start playing on load.</td></tr><tr><td><em>Loop</em></td><td>If enabled the track/list will start over again once finished.</td></tr><tr><td><em>Display</em></td><td>Display toggle. In situations where only Audio is required without any poster is desirable turning the Display off.</td></tr><tr><td><em>Skin</em></td><td>The Player Skin, additional skins can be stored in the <code>mediapro/assets/players/jplayer/skins</code> folder.</td></tr><tr><td><em>Preview image</em></td><td>Set an default media image. It will be overridden by the image selected on the Edit view.</td></tr><tr><td><em>Playlist</em></td><td>Toggles the playlist mode.</td></tr></tbody></table><h2 id="jwplayer-layout" tabindex="-1">JWPlayer Layout <a class="header-anchor" href="#jwplayer-layout" aria-label="Permalink to &quot;JWPlayer Layout&quot;">​</a></h2><p>Renders the video using the JWPlayer player.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Width</em></td><td>Set the Video width size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Height</em></td><td>Set the Video height size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Autoplay</em></td><td>If enabled the track will start playing on load.</td></tr><tr><td><em>Skin</em></td><td>The Player Skin, additional skins can be stored in the <code>mediapro/assets/players/jwplayer/skins</code> folder.</td></tr><tr><td><em>Preview image</em></td><td>Allows choosing a media image from another element value or local file.</td></tr><tr><td><em>Playlist</em></td><td>Toggles the playlist mode.</td></tr><tr><td><em>CloudFront Integration</em></td><td>Toggles the <a href="https://aws.amazon.com/cloudfront/" target="_blank" rel="noreferrer">CloudFront</a> integration.</td></tr><tr><td>-- <em>Distribution</em></td><td>Set the CloudFront Distribution Domain Name from Amazon CloudFront configuration. Ex: <code>&#39;s1u4jtfxixe2o5&#39;</code> without <code>.cloudfront.net.</code></td></tr><tr><td>-- <em>Key Pair ID</em></td><td>Key Pair ID is managed in Amazon Account Manager.</td></tr><tr><td>-- <em>Private Key</em></td><td>Set the relative path to the Private Key file you have downloaded when Key Pair was created.</td></tr></tbody></table><h2 id="mediaelement-layout" tabindex="-1">MediaElement Layout <a class="header-anchor" href="#mediaelement-layout" aria-label="Permalink to &quot;MediaElement Layout&quot;">​</a></h2><p>Renders the video using the MediaElement player.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><em>Width</em></td><td>Set the Video width size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Height</em></td><td>Set the Video height size. Notice that the Player Skin will not adapt to this size automatically.</td></tr><tr><td><em>Autoplay</em></td><td>If enabled the track will start playing on load.</td></tr><tr><td><em>Preload</em></td><td>Video preloading allows choosing <strong>None</strong>, the video will not be loaded until play is pressed, <strong>Metadata</strong>, only the video metadata (dimensions, first frame, track list, duration, etc.) will be preloaded and <strong>Auto</strong>, let the browser decide if the video should be preloaded.</td></tr><tr><td><em>CloudFront Integration</em></td><td>Toggles the <a href="https://aws.amazon.com/cloudfront/" target="_blank" rel="noreferrer">CloudFront</a> integration.</td></tr><tr><td>-- <em>Distribution</em></td><td>Set the CloudFront Distribution Domain Name from Amazon CloudFront configuration. Ex: <code>&#39;s1u4jtfxixe2o5&#39;</code> without <code>.cloudfront.net.</code></td></tr><tr><td>-- <em>Key Pair ID</em></td><td>Key Pair ID is managed in Amazon Account Manager.</td></tr><tr><td>-- <em>Private Key</em></td><td>Set the relative path to the Private Key file you have downloaded when Key Pair was created.</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("essentials-for-zoo/addons/elements/media-pro.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const mediaPro = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  mediaPro as default
};
